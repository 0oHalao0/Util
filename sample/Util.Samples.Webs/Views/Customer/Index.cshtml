@{
    ViewData["Title"] = "Tile";
}
<div>
        @Html.Ui().TextBox().Name("queryModel.Name").Model("queryModel.Name").Placeholder("姓名")

        @Html.Ui().TextBox().Name("queryModel.Nickname").Model("queryModel.Nickname").Placeholder("昵称")

        @Html.Ui().TextBox().Name("queryModel.Mobile").Model("queryModel.Mobile").Placeholder("电话")
    <button mat-button (click)="query()">查询</button>
</div>
<div style="margin-bottom: 20px;">
    <button (click)="add()">添加</button>
    <button (click)="batchDelete()">批量删除</button>
</div>

    <div class="example-container mat-elevation-z8">
        <div class="example-loading-shade" *ngIf="isLoadingResults || isRateLimitReached">
            <mat-spinner *ngIf="isLoadingResults"></mat-spinner>
        </div>

        <mat-table #table [dataSource]="dataSource" class="example-table"
                   matSort matSortActive="created" matSortDisableClear matSortDirection="asc">

            <!--- Note that these columns can be defined in any order.
            The actual rendered columns are set as a property on the row definition" -->
            <!-- Number Column -->
            <ng-container matColumnDef="LineNumber">
                <mat-header-cell *matHeaderCellDef>行号</mat-header-cell>
                <mat-cell *matCellDef="let row">{{ row.LineNumber }}</mat-cell>
            </ng-container>
            
            <ng-container matColumnDef="CheckBox">
                <mat-header-cell *matHeaderCellDef>
                    <mat-checkbox [(ngModel)]="isCheckAll" (change)="checkAll()">全选</mat-checkbox>
                </mat-header-cell>
                <mat-cell *matCellDef="let row">
                    <mat-checkbox [(ngModel)]="row.Checked"></mat-checkbox>
                </mat-cell>
            </ng-container>

            <ng-container matColumnDef="Name">
                <mat-header-cell *matHeaderCellDef mat-sort-header>姓名</mat-header-cell>
                <mat-cell *matCellDef="let row">{{ row.Name }}</mat-cell>
            </ng-container>

            <!-- Title Column -->
            <ng-container matColumnDef="Nickname">
                <mat-header-cell *matHeaderCellDef mat-sort-header>昵称</mat-header-cell>
                <mat-cell *matCellDef="let row">{{ row.Nickname }}</mat-cell>
            </ng-container>

            <!-- State Column -->
            <ng-container matColumnDef="Mobile">
                <mat-header-cell *matHeaderCellDef mat-sort-header>电话</mat-header-cell>
                <mat-cell *matCellDef="let row">{{ row.Mobile }}</mat-cell>
            </ng-container>

            <!-- State Column -->
            <ng-container matColumnDef="Handle">
                <mat-header-cell *matHeaderCellDef>操作</mat-header-cell>
                <mat-cell *matCellDef="let row">
                    <button (click)="delete(row.Id)">删除</button>
                    <button (click)="edit(row.Id)">编辑</button>
                    <button (click)="editByDialog(row.Id)">弹窗编辑</button>
                </mat-cell>
            </ng-container>

            <mat-header-row *matHeaderRowDef="displayedColumns"></mat-header-row>
            <mat-row *matRowDef="let row; columns: displayedColumns;"></mat-row>
        </mat-table>

        <mat-paginator [length]="resultsLength" [pageSize]="queryModel.PageSize" [pageSizeOptions]="[10, 20, 50]">
        </mat-paginator>
    </div>
    <style>
        /* Structure */
        .example-container {
            display: flex;
            flex-direction: column;
            max-height: 500px;
            min-width: 300px;
            position: relative;
        }

        .example-header {
            min-height: 64px;
            display: flex;
            align-items: center;
            padding-left: 24px;
            font-size: 20px;
        }

        .example-table {
            overflow: auto;
            min-height: 300px;
        }

        .example-loading-shade {
            position: absolute;
            top: 0;
            left: 0;
            bottom: 56px;
            right: 0;
            background: rgba(0, 0, 0, 0.15);
            z-index: 1;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .example-rate-limit-reached {
            color: #980000;
            max-width: 360px;
            text-align: center;
        }

        /* Column Widths */
        .mat-column-number,
        .mat-column-state {
            max-width: 64px;
        }

        .mat-column-created {
            max-width: 124px;
        }

        mat-cell {
            overflow: visible;
        }
    </style>
